
> refinejs-repo@0.0.0 biome
> biome lint .

./documentation/tutorial/essentials/data-fetching/intro/sandpack.tsx:65:5 lint/a11y/useKeyWithClickEvents ━━━━━━━━━━

  ! Enforce to have the onClick mouse event with the onKeyUp, the onKeyDown, or the onKeyPress keyboard event.
  
    64 │   return (
  > 65 │     <span
       │     ^^^^^
  > 66 │       onClick={() => {
        ...
  > 74 │       )}
  > 75 │     >
       │     ^
    76 │       {children}
    77 │     </span>
  
  i Actions triggered using mouse events should have corresponding keyboard events to account for keyboard-only navigation.
  

./packages/demo-sidebar/src/components/DemoSidebar/index.tsx:29:9 lint/a11y/useKeyWithClickEvents ━━━━━━━━━━

  ! Enforce to have the onClick mouse event with the onKeyUp, the onKeyDown, or the onKeyPress keyboard event.
  
    27 │       placement="right"
    28 │       extra={
  > 29 │         <div
       │         ^^^^
  > 30 │           style={handlerStyles}
  > 31 │           className="ant-drawer-handle"
  > 32 │           onClick={() => setShow(!show)}
  > 33 │         >
       │         ^
    34 │           {show ? (
    35 │             <Icons.CloseOutlined
  
  i Actions triggered using mouse events should have corresponding keyboard events to account for keyboard-only navigation.
  

./documentation/src/theme/TagsList/index.tsx:81:7 lint/a11y/useKeyWithClickEvents ━━━━━━━━━━━━━━━━━━

  ! Enforce to have the onClick mouse event with the onKeyUp, the onKeyDown, or the onKeyPress keyboard event.
  
     79 │         ))}
     80 │       </ul>
   > 81 │       <label
        │       ^^^^^^
   > 82 │         onClick={() => onShowMoreClick(!collapsed)}
         ...
   > 97 │         )}
   > 98 │       >
        │       ^
     99 │         Show More <ChevronDownIcon />
    100 │       </label>
  
  i Actions triggered using mouse events should have corresponding keyboard events to account for keyboard-only navigation.
  

./examples/store/src/components/cart/CartItem/CartItem.tsx:142:13 lint/a11y/useKeyWithClickEvents ━━━━━━━━━━

  ! Enforce to have the onClick mouse event with the onKeyUp, the onKeyDown, or the onKeyPress keyboard event.
  
    140 │             }}
    141 │           >
  > 142 │             <span
        │             ^^^^^
  > 143 │               className={s.productName}
  > 144 │               onClick={() => closeSidebarIfPresent()}
  > 145 │             >
        │             ^
    146 │               {item.title}
    147 │             </span>
  
  i Actions triggered using mouse events should have corresponding keyboard events to account for keyboard-only navigation.
  

./examples/app-crm-minimal/src/components/accordion/accordion.tsx:70:9 lint/a11y/useKeyWithClickEvents ━━━━━━━━━━

  ! Enforce to have the onClick mouse event with the onKeyUp, the onKeyDown, or the onKeyPress keyboard event.
  
    68 │         </div>
    69 │       ) : (
  > 70 │         <div onClick={toggleAccordion} style={{ cursor: "pointer", flex: 1 }}>
       │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    71 │           {fallback}
    72 │         </div>
  
  i Actions triggered using mouse events should have corresponding keyboard events to account for keyboard-only navigation.
  

./examples/store/src/components/common/UserNav/MenuSidebarView/MenuSidebarView.tsx:20:13 lint/a11y/useKeyWithClickEvents ━━━━━━━━━━

  ! Enforce to have the onClick mouse event with the onKeyUp, the onKeyDown, or the onKeyPress keyboard event.
  
    18 │         <nav>
    19 │           <ul>
  > 20 │             <li className={s.item} onClick={() => closeSidebar()}>
       │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    21 │               <Link href="/search">All</Link>
    22 │             </li>
  
  i Actions triggered using mouse events should have corresponding keyboard events to account for keyboard-only navigation.
  

./examples/store/src/components/common/UserNav/MenuSidebarView/MenuSidebarView.tsx:24:15 lint/a11y/useKeyWithClickEvents ━━━━━━━━━━

  ! Enforce to have the onClick mouse event with the onKeyUp, the onKeyDown, or the onKeyPress keyboard event.
  
    22 │             </li>
    23 │             {links.map((l) => (
  > 24 │               <li key={l.id} className={s.item} onClick={() => closeSidebar()}>
       │               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    25 │                 <Link href={`/search/${l.id}`}>{l.title}</Link>
    26 │               </li>
  
  i Actions triggered using mouse events should have corresponding keyboard events to account for keyboard-only navigation.
  

./examples/store/src/components/common/NativeSelect/NativeSelect.tsx:64:9 lint/a11y/useKeyWithClickEvents ━━━━━━━━━━

  ! Enforce to have the onClick mouse event with the onKeyUp, the onKeyDown, or the onKeyPress keyboard event.
  
    62 │         })}
    63 │       >
  > 64 │         <label
       │         ^^^^^^
  > 65 │           htmlFor={props.name}
        ...
  > 69 │           })}
  > 70 │         >
       │         ^
    71 │           {label}
    72 │           {required && <span className="text-rose-500">*</span>}
  
  i Actions triggered using mouse events should have corresponding keyboard events to account for keyboard-only navigation.
  

./documentation/src/components/video-modal-15k/index.tsx:78:5 lint/a11y/useKeyWithClickEvents ━━━━━━━━━━

  ! Enforce to have the onClick mouse event with the onKeyUp, the onKeyDown, or the onKeyPress keyboard event.
  
     77 │   return (
   > 78 │     <div
        │     ^^^^
   > 79 │       className={clsx(
         ...
  > 103 │       }}
  > 104 │     >
        │     ^
    105 │       {show && (
    106 │         <div
  
  i Actions triggered using mouse events should have corresponding keyboard events to account for keyboard-only navigation.
  

./documentation/src/components/video-modal-15k/index.tsx:106:9 lint/a11y/useKeyWithClickEvents ━━━━━━━━━━

  ! Enforce to have the onClick mouse event with the onKeyUp, the onKeyDown, or the onKeyPress keyboard event.
  
    104 │     >
    105 │       {show && (
  > 106 │         <div
        │         ^^^^
  > 107 │           className={clsx(
         ...
  > 128 │           }}
  > 129 │         >
        │         ^
    130 │           <button
    131 │             type="button"
  
  i Actions triggered using mouse events should have corresponding keyboard events to account for keyboard-only navigation.
  

./examples/store/src/components/ui/Collapse/Collapse.tsx:28:5 lint/a11y/useKeyWithClickEvents ━━━━━━━━━━

  ! Enforce to have the onClick mouse event with the onKeyUp, the onKeyDown, or the onKeyPress keyboard event.
  
    27 │   return (
  > 28 │     <div
       │     ^^^^
  > 29 │       className={s.root}
        ...
  > 33 │       onClick={toggle}
  > 34 │     >
       │     ^
    35 │       <div className={s.header}>
    36 │         <ChevronRight className={cn(s.icon, { [s.open]: isActive })} />
  
  i Actions triggered using mouse events should have corresponding keyboard events to account for keyboard-only navigation.
  

./examples/store/src/components/ui/Input/Input.tsx:29:9 lint/a11y/useKeyWithClickEvents ━━━━━━━━━━━━

  ! Enforce to have the onClick mouse event with the onKeyUp, the onKeyDown, or the onKeyPress keyboard event.
  
    27 │     return (
    28 │       <div className={cn(s.fieldset, containerClassName)}>
  > 29 │         <label
       │         ^^^^^^
  > 30 │           htmlFor={name}
        ...
  > 34 │           })}
  > 35 │         >
       │         ^
    36 │           {label}
    37 │           {required && <span className="text-rose-500">*</span>}
  
  i Actions triggered using mouse events should have corresponding keyboard events to account for keyboard-only navigation.
  

./packages/inferencer/src/inferencers/headless/code-viewer.tsx:51:9 lint/a11y/useKeyWithClickEvents ━━━━━━━━━━

  ! Enforce to have the onClick mouse event with the onKeyUp, the onKeyDown, or the onKeyPress keyboard event.
  
    49 │         }}
    50 │       >
  > 51 │         <div
       │         ^^^^
  > 52 │           style={{
        ...
  > 63 │           onClick={onClose}
  > 64 │         >
       │         ^
    65 │           &times;
    66 │         </div>
  
  i Actions triggered using mouse events should have corresponding keyboard events to account for keyboard-only navigation.
  

./examples/store/src/components/ui/Sidebar/Sidebar.tsx:48:9 lint/a11y/useKeyWithClickEvents ━━━━━━━━━━

  ! Enforce to have the onClick mouse event with the onKeyUp, the onKeyDown, or the onKeyPress keyboard event.
  
    46 │     >
    47 │       <div className="absolute inset-0 overflow-hidden">
  > 48 │         <div className={s.backdrop} onClick={onClose} />
       │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    49 │         <section className="absolute inset-y-0 right-0 flex w-full max-w-full outline-none md:w-auto md:pl-10">
    50 │           <div className="h-full w-full md:w-screen md:max-w-md">
  
  i Actions triggered using mouse events should have corresponding keyboard events to account for keyboard-only navigation.
  

./examples/table-react-table-advanced/src/pages/posts/list.tsx:90:15 lint/a11y/useKeyWithClickEvents ━━━━━━━━━━

  ! Enforce to have the onClick mouse event with the onKeyUp, the onKeyDown, or the onKeyPress keyboard event.
  
    88 │                 }}
    89 │               />
  > 90 │               <span id="expand-toggle" onClick={() => row.toggleExpanded()}>
       │               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    91 │                 {row.getIsExpanded() ? "👇" : "👉"}
    92 │               </span>
  
  i Actions triggered using mouse events should have corresponding keyboard events to account for keyboard-only navigation.
  

./examples/table-react-table-advanced/src/pages/posts/list.tsx:250:17 lint/a11y/useKeyWithClickEvents ━━━━━━━━━━

  ! Enforce to have the onClick mouse event with the onKeyUp, the onKeyDown, or the onKeyPress keyboard event.
  
    248 │             <td>
    249 │               <div>
  > 250 │                 <span onClick={() => row.toggleExpanded()}>
        │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    251 │                   {row.getIsExpanded() ? "👇" : "👉"}
    252 │                 </span>
  
  i Actions triggered using mouse events should have corresponding keyboard events to account for keyboard-only navigation.
  

./examples/table-react-table-advanced/src/pages/posts/list.tsx:351:19 lint/a11y/useKeyWithClickEvents ━━━━━━━━━━

  ! Enforce to have the onClick mouse event with the onKeyUp, the onKeyDown, or the onKeyPress keyboard event.
  
    349 │               <tr key={headerGroup.id}>
    350 │                 {headerGroup.headers.map((header) => (
  > 351 │                   <th
        │                   ^^^
  > 352 │                     key={header.id}
  > 353 │                     colSpan={header.colSpan}
  > 354 │                     onClick={header.column.getToggleSortingHandler()}
  > 355 │                   >
        │                   ^
    356 │                     {flexRender(
    357 │                       header.column.columnDef.header,
  
  i Actions triggered using mouse events should have corresponding keyboard events to account for keyboard-only navigation.
  

./packages/devtools/src/components/devtools-selector.tsx:81:7 lint/a11y/useKeyWithClickEvents ━━━━━━━━━━

  ! Enforce to have the onClick mouse event with the onKeyUp, the onKeyDown, or the onKeyPress keyboard event.
  
     79 │   return (
     80 │     <div style={style}>
   > 81 │       <div
        │       ^^^^
   > 82 │         role="button"
         ...
   > 99 │         }}
  > 100 │       >
        │       ^
    101 │         {icon}
    102 │       </div>
  
  i Actions triggered using mouse events should have corresponding keyboard events to account for keyboard-only navigation.
  

./packages/devtools/src/components/devtools-pin.tsx:21:5 lint/a11y/useKeyWithClickEvents ━━━━━━━━━━━

  ! Enforce to have the onClick mouse event with the onKeyUp, the onKeyDown, or the onKeyPress keyboard event.
  
    20 │   return (
  > 21 │     <div
       │     ^^^^
  > 22 │       onMouseOver={() => setHover(true)}
        ...
  > 40 │       onClick={onClick}
  > 41 │     >
       │     ^
    42 │       <DevtoolsIcon />
    43 │       <DevtoolsSelector
  
  i Actions triggered using mouse events should have corresponding keyboard events to account for keyboard-only navigation.
  

./examples/audit-log-provider/src/components/modal.tsx:17:7 lint/a11y/useKeyWithClickEvents ━━━━━━━━━━

  ! Enforce to have the onClick mouse event with the onKeyUp, the onKeyDown, or the onKeyPress keyboard event.
  
    15 │   return (
    16 │     <>
  > 17 │       <div className="overlay" onClick={onClose}></div>
       │       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    18 │       <div className="modal">
    19 │         <div className="modal-title">
  
  i Actions triggered using mouse events should have corresponding keyboard events to account for keyboard-only navigation.
  

The number of diagnostics exceeds the number allowed by Biome.
Diagnostics not shown: 34.
Checked 6952 file(s) in 494ms
