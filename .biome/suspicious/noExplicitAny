
> refinejs-repo@0.0.0 biome
> biome lint .

./cypress/support/commands/intercepts/hasura.ts:89:18 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    87 │             hasuraBlogPosts.data.blog_posts.find(
    88 │               (post) => post.id === id,
  > 89 │             ) as any;
       │                  ^^^
    90 │ 
    91 │           if (!post) {
  
  i any disables many type checking rules. Its use should be avoided.
  

./cypress/support/commands/resource.ts:43:55 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    41 │ };
    42 │ 
  > 43 │ const assertFormShouldHaveResponseValues = (response: any, ui: UITypes) => {
       │                                                       ^^^
    44 │   const body = response?.body;
    45 │ 
  
  i any disables many type checking rules. Its use should be avoided.
  

./cypress/support/commands/resource.ts:109:42 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    107 │ };
    108 │ 
  > 109 │ const assertSuccessResponse = (response: any, ui: UITypes) => {
        │                                          ^^^
    110 │   const body = response?.body;
    111 │ 
  
  i any disables many type checking rules. Its use should be avoided.
  

./packages/codemod/src/helpers/separate-imports.ts:12:22 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    10 │ export function separateImports(payload: {
    11 │   j: JSCodeshift;
  > 12 │   source: Collection<any>;
       │                      ^^^
    13 │   imports: string[];
    14 │   renameImports: { [key: string]: string };
  
  i any disables many type checking rules. Its use should be avoided.
  

./packages/strapi-v4/src/dataProvider.ts:94:24 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    92 │     const url = `${apiUrl}/${resource}`;
    93 │ 
  > 94 │     let dataVariables: any = { data: variables };
       │                        ^^^
    95 │ 
    96 │     if (resource === "users") {
  
  i any disables many type checking rules. Its use should be avoided.
  

./packages/strapi-v4/src/dataProvider.ts:115:24 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    113 │     const url = `${apiUrl}/${resource}/${id}`;
    114 │ 
  > 115 │     let dataVariables: any = { data: variables };
        │                        ^^^
    116 │ 
    117 │     if (resource === "users") {
  
  i any disables many type checking rules. Its use should be avoided.
  

./packages/strapi-v4/src/dataProvider.ts:140:28 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    138 │         const url = `${apiUrl}/${resource}/${id}`;
    139 │ 
  > 140 │         let dataVariables: any = { data: variables };
        │                            ^^^
    141 │ 
    142 │         if (resource === "users") {
  
  i any disables many type checking rules. Its use should be avoided.
  

./packages/strapi-v4/src/helpers/normalize.ts:1:37 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
  > 1 │ export const getValueProps = (data: any, imageUrl: string) => {
      │                                     ^^^
    2 │   if (!data) {
    3 │     return { fileList: [] };
  
  i any disables many type checking rules. Its use should be avoided.
  

./packages/strapi-v4/src/helpers/normalize.ts:10:56 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
     8 │     fileList:
     9 │       data.fileList ??
  > 10 │       (Array.isArray(data) ? data : [data]).map((item: any) => {
       │                                                        ^^^
    11 │         const file: any = {
    12 │           name: item.name,
  
  i any disables many type checking rules. Its use should be avoided.
  

./packages/strapi-v4/src/helpers/normalize.ts:11:21 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
     9 │       data.fileList ??
    10 │       (Array.isArray(data) ? data : [data]).map((item: any) => {
  > 11 │         const file: any = {
       │                     ^^^
    12 │           name: item.name,
    13 │           percent: item.percent,
  
  i any disables many type checking rules. Its use should be avoided.
  

./packages/strapi-v4/src/helpers/normalize.ts:29:43 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    27 │ };
    28 │ 
  > 29 │ export const mediaUploadMapper = (params: any) => {
       │                                           ^^^
    30 │   Object.keys(params).map((item) => {
    31 │     if (params[item]) {
  
  i any disables many type checking rules. Its use should be avoided.
  

./packages/devtools-server/src/reload-on-change.ts:16:30 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    14 │             if (client.readyState === OPEN) {
    15 │               console.log("Reloading connected client...");
  > 16 │               send(client as any, DevtoolsEvent.RELOAD, {});
       │                              ^^^
    17 │             }
    18 │           });
  
  i any disables many type checking rules. Its use should be avoided.
  

./packages/strapi-v4/src/utils/normalizeData.ts:1:24 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
  > 1 │ const flatten = (data: any) => {
      │                        ^^^
    2 │   if (!data.attributes) return data;
    3 │ 
  
  i any disables many type checking rules. Its use should be avoided.
  

./packages/strapi-v4/src/utils/normalizeData.ts:10:25 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
     8 │ };
     9 │ 
  > 10 │ const isObject = (data: any) =>
       │                         ^^^
    11 │   Object.prototype.toString.call(data) === "[object Object]";
    12 │ 
  
  i any disables many type checking rules. Its use should be avoided.
  

./packages/strapi-v4/src/utils/normalizeData.ts:13:37 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    11 │   Object.prototype.toString.call(data) === "[object Object]";
    12 │ 
  > 13 │ export const normalizeData = (data: any): any => {
       │                                     ^^^
    14 │   if (Array.isArray(data)) {
    15 │     return data.map((item) => normalizeData(item));
  
  i any disables many type checking rules. Its use should be avoided.
  

./packages/strapi-v4/src/utils/normalizeData.ts:13:43 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    11 │   Object.prototype.toString.call(data) === "[object Object]";
    12 │ 
  > 13 │ export const normalizeData = (data: any): any => {
       │                                           ^^^
    14 │   if (Array.isArray(data)) {
    15 │     return data.map((item) => normalizeData(item));
  
  i any disables many type checking rules. Its use should be avoided.
  

./packages/strapi-v4/src/utils/transformHttpError.ts:4:41 lint/suspicious/noExplicitAny ━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    2 │ import { transformErrorMessages } from "./transformErrorMessages";
    3 │ 
  > 4 │ export const transformHttpError = (err: any): HttpError => {
      │                                         ^^^
    5 │   const error = err?.response?.data?.error || {};
    6 │ 
  
  i any disables many type checking rules. Its use should be avoided.
  

./packages/devtools-server/src/index.ts:29:23 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    27 │   ws.on("connection", (client) => {
    28 │     // Initialize development client
  > 29 │     receive(client as any, DevtoolsEvent.DEVTOOLS_INIT, (data) => {
       │                       ^^^
    30 │       if (db.connectedApp) {
    31 │         // send client the devtools client url if already connected
  
  i any disables many type checking rules. Its use should be avoided.
  

./packages/devtools-server/src/index.ts:32:24 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    30 │       if (db.connectedApp) {
    31 │         // send client the devtools client url if already connected
  > 32 │         send(client as any, DevtoolsEvent.DEVTOOLS_ALREADY_CONNECTED, {
       │                        ^^^
    33 │           url: db.connectedApp,
    34 │         });
  
  i any disables many type checking rules. Its use should be avoided.
  

./packages/devtools-server/src/index.ts:40:21 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    39 │         ws.clients.forEach((c) => {
  > 40 │           send(c as any, DevtoolsEvent.DEVTOOLS_CONNECTED_APP, {
       │                     ^^^
    41 │             url: db.connectedApp,
    42 │           });
  
  i any disables many type checking rules. Its use should be avoided.
  

The number of diagnostics exceeds the number allowed by Biome.
Diagnostics not shown: 1389.
Checked 6952 file(s) in 478ms
