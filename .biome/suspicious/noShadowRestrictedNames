
> refinejs-repo@0.0.0 biome
> biome lint .

./documentation/src/theme/BlogPostItem/index.js:6:10 lint/suspicious/noShadowRestrictedNames ━━━━━━━━━━

  ! Do not shadow the global "Date" property.
  
    4 │ import BlogPostItemContainer from "@theme/BlogPostItem/Container";
    5 │ 
  > 6 │ import { Date } from "@site/src/components/blog/common";
      │          ^^^^
    7 │ import clsx from "clsx";
    8 │ 
  
  i Consider renaming this variable. It's easy to confuse the origin of variables when they're named after a known global.
  

./documentation/src/components/blog/post-paginator/index.js:4:10 lint/suspicious/noShadowRestrictedNames ━━━━━━━━━━

  ! Do not shadow the global "Date" property.
  
    2 │ import Link from "@docusaurus/Link";
    3 │ 
  > 4 │ import { Date } from "@site/src/components/blog/common";
      │          ^^^^
    5 │ import clsx from "clsx";
    6 │ 
  
  i Consider renaming this variable. It's easy to confuse the origin of variables when they're named after a known global.
  

./documentation/src/components/blog/common/date.js:3:17 lint/suspicious/noShadowRestrictedNames ━━━━━━━━━━

  ! Do not shadow the global "Date" property.
  
    1 │ import React from "react";
    2 │ 
  > 3 │ export function Date({ date, formattedDate }) {
      │                 ^^^^
    4 │   return (
    5 │     <time dateTime={date} itemProp="datePublished">
  
  i Consider renaming this variable. It's easy to confuse the origin of variables when they're named after a known global.
  

./documentation/src/components/blog/featured-blog-post-item/index.js:6:10 lint/suspicious/noShadowRestrictedNames ━━━━━━━━━━

  ! Do not shadow the global "Date" property.
  
    4 │ import BlogPostItemContainer from "@theme/BlogPostItem/Container";
    5 │ 
  > 6 │ import { Date } from "@site/src/components/blog/common";
      │          ^^^^
    7 │ import clsx from "clsx";
    8 │ 
  
  i Consider renaming this variable. It's easy to confuse the origin of variables when they're named after a known global.
  

./documentation/src/components/blog/blog-post-page/index.js:18:10 lint/suspicious/noShadowRestrictedNames ━━━━━━━━━━

  ! Do not shadow the global "Date" property.
  
    16 │ import clsx from "clsx";
    17 │ 
  > 18 │ import { Date, ReadingTime } from "@site/src/components/blog/common";
       │          ^^^^
    19 │ import { BannerRandom } from "@site/src/components/banner/banner-random";
    20 │ 
  
  i Consider renaming this variable. It's easy to confuse the origin of variables when they're named after a known global.
  

./packages/live-previews/pages/_error.tsx:4:7 lint/suspicious/noShadowRestrictedNames ━━━━━━━━━━━━━━

  ! Do not shadow the global "Error" property.
  
    2 │ import type { ErrorProps } from "next/error";
    3 │ 
  > 4 │ const Error = ({ statusCode, title }: ErrorProps): JSX.Element => {
      │       ^^^^^
    5 │   const getMessage = () => {
    6 │     if (title) {
  
  i Consider renaming this variable. It's easy to confuse the origin of variables when they're named after a known global.
  

./packages/live-previews/pages/preview.tsx:6:8 lint/suspicious/noShadowRestrictedNames ━━━━━━━━━━━━━

  ! Do not shadow the global "Error" property.
  
    4 │ import { LivePreview, LiveProvider } from "@aliemir/react-live";
    5 │ 
  > 6 │ import Error from "@/pages/_error";
      │        ^^^^^
    7 │ import { Loading } from "@/src/components/loading";
    8 │ import { LiveError } from "@/src/components/live-error";
  
  i Consider renaming this variable. It's easy to confuse the origin of variables when they're named after a known global.
  

./examples/finefoods-material-ui/src/pages/orders/show.tsx:35:26 lint/suspicious/noShadowRestrictedNames ━━━━━━━━━━

  ! Do not shadow the global "Map" property.
  
    33 │ import PhoneIphoneIcon from "@mui/icons-material/PhoneIphone";
    34 │ 
  > 35 │ import { CourierInfoBox, Map, MapMarker } from "../../components";
       │                          ^^^
    36 │ import { useOrderCustomKbarActions } from "../../hooks";
    37 │ import { IEvent, IOrder, IProduct } from "../../interfaces";
  
  i Consider renaming this variable. It's easy to confuse the origin of variables when they're named after a known global.
  

./examples/finefoods-material-ui/src/components/map/index.tsx:1:8 lint/suspicious/noShadowRestrictedNames ━━━━━━━━━━

  ! Do not shadow the global "Map" property.
  
  > 1 │ import Map from "./map";
      │        ^^^
    2 │ import MapMarker from "./marker";
    3 │ 
  
  i Consider renaming this variable. It's easy to confuse the origin of variables when they're named after a known global.
  

./examples/finefoods-material-ui/src/components/dashboard/deliveryMap/index.tsx:4:10 lint/suspicious/noShadowRestrictedNames ━━━━━━━━━━

  ! Do not shadow the global "Map" property.
  
    2 │ import Box from "@mui/material/Box";
    3 │ 
  > 4 │ import { Map, MapMarker } from "../../../components";
      │          ^^^
    5 │ import { IOrder } from "../../../interfaces";
    6 │ 
  
  i Consider renaming this variable. It's easy to confuse the origin of variables when they're named after a known global.
  

./examples/finefoods-antd/src/components/order/deliveryMap/index.tsx:2:10 lint/suspicious/noShadowRestrictedNames ━━━━━━━━━━

  ! Do not shadow the global "Map" property.
  
    1 │ import { IOrder } from "../../../interfaces";
  > 2 │ import { Map, MapMarker } from "../../map";
      │          ^^^
    3 │ 
    4 │ type Props = {
  
  i Consider renaming this variable. It's easy to confuse the origin of variables when they're named after a known global.
  

./examples/finefoods-antd/src/components/store/map/all-stores-map.tsx:2:10 lint/suspicious/noShadowRestrictedNames ━━━━━━━━━━

  ! Do not shadow the global "Map" property.
  
    1 │ import { useList, useNavigation, useTranslate } from "@refinedev/core";
  > 2 │ import { Map, AdvancedMarker } from "../../map";
      │          ^^^
    3 │ import { IStore } from "../../../interfaces";
    4 │ import { Card, Flex, List, Tag, Typography } from "antd";
  
  i Consider renaming this variable. It's easy to confuse the origin of variables when they're named after a known global.
  

./examples/finefoods-antd/src/components/store/map/store-map.tsx:3:10 lint/suspicious/noShadowRestrictedNames ━━━━━━━━━━

  ! Do not shadow the global "Map" property.
  
    1 │ import { Flex } from "antd";
    2 │ import _debounce from "lodash/debounce";
  > 3 │ import { Map, MapMarker } from "../../map";
      │          ^^^
    4 │ import { IStore } from "../../../interfaces";
    5 │ import { useCallback } from "react";
  
  i Consider renaming this variable. It's easy to confuse the origin of variables when they're named after a known global.
  

./examples/finefoods-antd/src/components/dashboard/allOrdersMap/index.tsx:3:10 lint/suspicious/noShadowRestrictedNames ━━━━━━━━━━

  ! Do not shadow the global "Map" property.
  
    1 │ import { useList, useNavigation } from "@refinedev/core";
    2 │ 
  > 3 │ import { Map, MapMarker } from "../..";
      │          ^^^
    4 │ import { IOrder } from "../../../interfaces";
    5 │ 
  
  i Consider renaming this variable. It's easy to confuse the origin of variables when they're named after a known global.
  

./examples/finefoods-antd/src/components/map/index.tsx:1:8 lint/suspicious/noShadowRestrictedNames ━━━━━━━━━━

  ! Do not shadow the global "Map" property.
  
  > 1 │ import Map from "./map";
      │        ^^^
    2 │ import MapMarker from "./marker";
    3 │ import AdvancedMarker from "./advanced-marker";
  
  i Consider renaming this variable. It's easy to confuse the origin of variables when they're named after a known global.
  

./examples/app-crm/src/routes/dashboard/components/companies-map/map.tsx:10:7 lint/suspicious/noShadowRestrictedNames ━━━━━━━━━━

  ! Do not shadow the global "Map" property.
  
     8 │ import "leaflet/dist/leaflet.css";
     9 │ 
  > 10 │ const Map = () => {
       │       ^^^
    11 │   const customMarkerIcon = divIcon({
    12 │     className: "custom-marker-icon",
  
  i Consider renaming this variable. It's easy to confuse the origin of variables when they're named after a known global.
  

./examples/app-crm/src/routes/dashboard/components/companies-map/index.tsx:13:7 lint/suspicious/noShadowRestrictedNames ━━━━━━━━━━

  ! Do not shadow the global "Map" property.
  
    11 │ import styles from "./index.module.css";
    12 │ 
  > 13 │ const Map = lazy(() => import("./map"));
       │       ^^^
    14 │ 
    15 │ export const CompaniesMap: React.FC = () => {
  
  i Consider renaming this variable. It's easy to confuse the origin of variables when they're named after a known global.
  

./examples/with-storybook-material-ui/src/stories/fields/EmailField.stories.tsx:45:14 lint/suspicious/noShadowRestrictedNames ━━━━━━━━━━

  ! Do not shadow the global "Number" property.
  
    43 │ };
    44 │ 
  > 45 │ export const Number: ComponentStory<typeof NumberField> = (args) => {
       │              ^^^^^^
    46 │   const theme = useTheme();
    47 │   return (
  
  i Consider renaming this variable. It's easy to confuse the origin of variables when they're named after a known global.
  

./examples/with-storybook-material-ui/src/stories/fields/BooleanField.stories.tsx:24:14 lint/suspicious/noShadowRestrictedNames ━━━━━━━━━━

  ! Do not shadow the global "Boolean" property.
  
    22 │ } as ComponentMeta<typeof BooleanField>;
    23 │ 
  > 24 │ export const Boolean: ComponentStory<typeof BooleanField> = (args) => (
       │              ^^^^^^^
    25 │   <BooleanField
    26 │     value={args.value}
  
  i Consider renaming this variable. It's easy to confuse the origin of variables when they're named after a known global.
  

./examples/with-storybook-material-ui/src/stories/fields/DateField.stories.tsx:23:14 lint/suspicious/noShadowRestrictedNames ━━━━━━━━━━

  ! Do not shadow the global "Date" property.
  
    21 │ } as ComponentMeta<typeof DateField>;
    22 │ 
  > 23 │ export const Date: ComponentStory<typeof DateField> = (args) => {
       │              ^^^^
    24 │   const theme = useTheme();
    25 │   return (
  
  i Consider renaming this variable. It's easy to confuse the origin of variables when they're named after a known global.
  

Checked 6952 file(s) in 461ms
