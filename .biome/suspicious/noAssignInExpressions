
> refinejs-repo@0.0.0 biome
> biome lint .

./examples/blog-next-refine-pwa/public/workbox-eac1af49.js:2229:21 lint/suspicious/noAssignInExpressions ━━━━━━━━━━

  ! The assignment should not be in an expression.
  
    2227 │             let promise;
    2228 │ 
  > 2229 │             while ((promise = this._extendLifetimePromises.shift())) {
         │                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    2230 │                 await promise;
    2231 │             }
  
  i The use of assignments in expressions is confusing.
    Expressions are often considered as side-effect free.
  

./packages/codemod/src/transformations/v4/fix-v4-deprecations.ts:725:44 lint/suspicious/noAssignInExpressions ━━━━━━━━━━

  ! The assignment should not be in an expression.
  
    723 │         const hasMode = (
    724 │             paginationProperty as unknown as any
  > 725 │         )?.value?.properties?.find((p) => (p["name"] = "mode"));
        │                                            ^^^^^^^^^^^^^^^^^^
    726 │ 
    727 │         if (hasPaginationProperty && !hasMode) {
  
  i The use of assignments in expressions is confusing.
    Expressions are often considered as side-effect free.
  

./packages/strapi-v4/src/utils/generateFilter.ts:10:28 lint/suspicious/noAssignInExpressions ━━━━━━━━━━

  ! The assignment should not be in an expression.
  
     8 │     if (fields.length > 1) {
     9 │         let fieldQuery = "";
  > 10 │         fields.map((v) => (fieldQuery += `[${v}]`));
       │                            ^^^^^^^^^^^^^^^^^^^^^^
    11 │         return fieldQuery;
    12 │     } else {
  
  i The use of assignments in expressions is confusing.
    Expressions are often considered as side-effect free.
  

./examples/blog-refine-supabase-auth/src/pages/Login.tsx:30:35 lint/suspicious/noAssignInExpressions ━━━━━━━━━━

  ! The assignment should not be in an expression.
  
    28 │             <Input
    29 │                 className="border-gray bg-gray text-dark mb-4 text-lg font-medium"
  > 30 │                 onChange={(e) => (mobileNoRef.current = e.target.value)}
       │                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    31 │                 onFocus={() => setError("")}
    32 │                 name="mobile"
  
  i The use of assignments in expressions is confusing.
    Expressions are often considered as side-effect free.
  

./examples/blog-refine-supabase-auth/src/pages/Login.tsx:47:35 lint/suspicious/noAssignInExpressions ━━━━━━━━━━

  ! The assignment should not be in an expression.
  
    45 │             <Input
    46 │                 className="border-gray bg-gray text-dark mb-4 text-lg font-medium"
  > 47 │                 onChange={(e) => (otpRef.current = e.target.value)}
       │                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    48 │                 onFocus={() => setError("")}
    49 │                 name="otp"
  
  i The use of assignments in expressions is confusing.
    Expressions are often considered as side-effect free.
  

Checked 6953 file(s) in 595ms
