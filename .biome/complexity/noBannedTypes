
> refinejs-repo@0.0.0 biome
> biome lint .

./packages/demo-sidebar/src/hooks/useDemoSidebar/index.tsx:5:36 lint/complexity/noBannedTypes ━━━━━━━━━━

  ! Don't use '{}' as a type.
  
    3 │ import { DemoSidebarProps } from "../../components/DemoSidebar/types";
    4 │ 
  > 5 │ export const useDemoSidebar = (): [{}, DemoSidebarProps] => {
      │                                    ^^
    6 │   const [mutationMode, setMutationMode] = useState<MutationMode>("pessimistic");
    7 │   const [syncWithLocation, setSyncWithLocation] = useState<boolean>(false);
  
  i Prefer explicitly define the object shape. '{}' means "any non-nullable value".
  

./packages/devtools-shared/src/event-types.ts:57:27 lint/complexity/noBannedTypes ━━━━━━━━━━━━━━━━━━

  ! Don't use '{}' as a type.
  
    56 │ export type DevtoolsEventPayloads = {
  > 57 │   [DevtoolsEvent.RELOAD]: {};
       │                           ^^
    58 │   [DevtoolsEvent.DEVTOOLS_INIT]: { url: string };
    59 │   [DevtoolsEvent.DEVTOOLS_HANDSHAKE]: { url: string };
  
  i Prefer explicitly define the object shape. '{}' means "any non-nullable value".
  

./packages/devtools-shared/src/event-types.ts:66:46 lint/complexity/noBannedTypes ━━━━━━━━━━━━━━━━━━

  ! Don't use '{}' as a type.
  
    64 │   };
    65 │   [DevtoolsEvent.DEVTOOLS_CONNECTED_APP]: { url: string | null };
  > 66 │   [DevtoolsEvent.DEVTOOLS_DISCONNECTED_APP]: {};
       │                                              ^^
    67 │   [DevtoolsEvent.DEVTOOLS_HIGHLIGHT_IN_MONITOR]: { name: string };
    68 │   [DevtoolsEvent.DEVTOOLS_HIGHLIGHT_IN_MONITOR_ACTION]: { name: string };
  
  i Prefer explicitly define the object shape. '{}' means "any non-nullable value".
  

./packages/devtools-shared/src/event-types.ts:69:43 lint/complexity/noBannedTypes ━━━━━━━━━━━━━━━━━━

  ! Don't use '{}' as a type.
  
    67 │   [DevtoolsEvent.DEVTOOLS_HIGHLIGHT_IN_MONITOR]: { name: string };
    68 │   [DevtoolsEvent.DEVTOOLS_HIGHLIGHT_IN_MONITOR_ACTION]: { name: string };
  > 69 │   [DevtoolsEvent.DEVTOOLS_LOGIN_SUCCESS]: {};
       │                                           ^^
    70 │   [DevtoolsEvent.DEVTOOLS_RELOAD_AFTER_LOGIN]: {};
    71 │ };
  
  i Prefer explicitly define the object shape. '{}' means "any non-nullable value".
  

./packages/devtools-shared/src/event-types.ts:70:48 lint/complexity/noBannedTypes ━━━━━━━━━━━━━━━━━━

  ! Don't use '{}' as a type.
  
    68 │   [DevtoolsEvent.DEVTOOLS_HIGHLIGHT_IN_MONITOR_ACTION]: { name: string };
    69 │   [DevtoolsEvent.DEVTOOLS_LOGIN_SUCCESS]: {};
  > 70 │   [DevtoolsEvent.DEVTOOLS_RELOAD_AFTER_LOGIN]: {};
       │                                                ^^
    71 │ };
    72 │ 
  
  i Prefer explicitly define the object shape. '{}' means "any non-nullable value".
  

./packages/core/src/interfaces/autoSave.ts:18:16 lint/complexity/noBannedTypes ━━━━━━━━━━━━━━━━━━━━━

  ! Don't use '{}' as a type.
  
    16 │   TData extends BaseRecord = BaseRecord,
    17 │   TError extends HttpError = HttpError,
  > 18 │   TVariables = {},
       │                ^^
    19 │ > = {
    20 │   autoSaveProps: Pick<
  
  i Prefer explicitly define the object shape. '{}' means "any non-nullable value".
  

./packages/core/src/interfaces/autoSave.ts:36:16 lint/complexity/noBannedTypes ━━━━━━━━━━━━━━━━━━━━━

  ! Don't use '{}' as a type.
  
    34 │   TData extends BaseRecord = BaseRecord,
    35 │   TError extends HttpError = HttpError,
  > 36 │   TVariables = {},
       │                ^^
    37 │ > = {
    38 │   /**
  
  i Prefer explicitly define the object shape. '{}' means "any non-nullable value".
  

./packages/chakra-ui/src/components/crud/types.ts:34:3 lint/complexity/noBannedTypes ━━━━━━━━━━━━━━━

  ! Don't use '{}' as a type.
  
    32 │   BoxProps,
    33 │   BoxProps,
  > 34 │   {},
       │   ^^
    35 │   RefreshButtonProps,
    36 │   ListButtonProps
  
  i Prefer explicitly define the object shape. '{}' means "any non-nullable value".
  

./packages/chakra-ui/src/components/crud/types.ts:53:3 lint/complexity/noBannedTypes ━━━━━━━━━━━━━━━

  ! Don't use '{}' as a type.
  
    51 │   BoxProps,
    52 │   BoxProps,
  > 53 │   {},
       │   ^^
    54 │   EditButtonProps,
    55 │   DeleteButtonProps,
  
  i Prefer explicitly define the object shape. '{}' means "any non-nullable value".
  

./documentation/src/components/checklist/index.tsx:9:38 lint/complexity/noBannedTypes ━━━━━━━━━━━━━━

  ! Don't use '{}' as a type.
  
     7 │ import { CheckListIcon } from "@site/src/refine-theme/icons/check-list";
     8 │ 
   > 9 │ type Props = React.PropsWithChildren<{}>;
       │                                      ^^
    10 │ 
    11 │ const Checklist: React.FC<Props> = ({ children }) => {
  
  i Prefer explicitly define the object shape. '{}' means "any non-nullable value".
  

./packages/mantine/src/components/crud/types.ts:31:3 lint/complexity/noBannedTypes ━━━━━━━━━━━━━━━━━

  ! Don't use '{}' as a type.
  
    29 │   GroupProps,
    30 │   BoxProps,
  > 31 │   {},
       │   ^^
    32 │   EditButtonProps,
    33 │   DeleteButtonProps,
  
  i Prefer explicitly define the object shape. '{}' means "any non-nullable value".
  

./packages/mantine/src/components/crud/types.ts:55:3 lint/complexity/noBannedTypes ━━━━━━━━━━━━━━━━━

  ! Don't use '{}' as a type.
  
    53 │   GroupProps,
    54 │   BoxProps,
  > 55 │   {},
       │   ^^
    56 │   RefreshButtonProps,
    57 │   ListButtonProps
  
  i Prefer explicitly define the object shape. '{}' means "any non-nullable value".
  

./packages/ui-tests/src/tests/crud/edit.tsx:32:60 lint/complexity/noBannedTypes ━━━━━━━━━━━━━━━━━━━━

  ! Don't use '{}' as a type.
  
    30 │ export const crudEditTests = (
    31 │   Edit: React.ComponentType<
  > 32 │     RefineCrudEditProps<any, any, any, any, any, any, any, {}, any, any>
       │                                                            ^^
    33 │   >,
    34 │ ): void => {
  
  i Prefer explicitly define the object shape. '{}' means "any non-nullable value".
  

./packages/ui-tests/src/tests/crud/show.tsx:32:50 lint/complexity/noBannedTypes ━━━━━━━━━━━━━━━━━━━━

  ! Don't use '{}' as a type.
  
    30 │ export const crudShowTests = (
    31 │   Show: React.ComponentType<
  > 32 │     RefineCrudShowProps<any, any, any, any, any, {}, any, any, any, any>
       │                                                  ^^
    33 │   >,
    34 │ ): void => {
  
  i Prefer explicitly define the object shape. '{}' means "any non-nullable value".
  

./packages/ui-tests/src/tests/crud/create.tsx:32:57 lint/complexity/noBannedTypes ━━━━━━━━━━━━━━━━━━

  ! Don't use '{}' as a type.
  
    30 │ export const crudCreateTests = (
    31 │   Create: React.ComponentType<
  > 32 │     RefineCrudCreateProps<any, any, any, any, any, any, {}>
       │                                                         ^^
    33 │   >,
    34 │ ): void => {
  
  i Prefer explicitly define the object shape. '{}' means "any non-nullable value".
  

./packages/ui-tests/src/tests/crud/list.tsx:31:74 lint/complexity/noBannedTypes ━━━━━━━━━━━━━━━━━━━━

  ! Don't use '{}' as a type.
  
    30 │ export const crudListTests = (
  > 31 │   List: React.ComponentType<RefineCrudListProps<any, any, any, any, any, {}>>,
       │                                                                          ^^
    32 │ ): void => {
    33 │   describe("[@refinedev/ui-tests] Common Tests / CRUD List", () => {
  
  i Prefer explicitly define the object shape. '{}' means "any non-nullable value".
  

./packages/react-router-v6/src/legacy/index.ts:25:65 lint/complexity/noBannedTypes ━━━━━━━━━━━━━━━━━

  ! Don't use '{}' as a type.
  
    23 │   useLocation: typeof useLocation;
    24 │   Link: typeof Link;
  > 25 │   useParams: <Params extends { [K in keyof Params]?: string } = {}>() => Params;
       │                                                                 ^^
    26 │   RouterComponent: React.FC<BrowserRouterProps>;
    27 │   routes?: RefineRouteProps[];
  
  i Prefer explicitly define the object shape. '{}' means "any non-nullable value".
  

./examples/blog-react-dnd/src/components/cards.tsx:7:9 lint/complexity/noBannedTypes ━━━━━━━━━━━━━━━

  ! Don't use '{}' as a type.
  
    6 │ type obj = {
  > 7 │   name: {};
      │         ^^
    8 │ };
    9 │ 
  
  i Prefer explicitly define the object shape. '{}' means "any non-nullable value".
  

./documentation/src/components/integrations/layout/index.tsx:8:67 lint/complexity/noBannedTypes ━━━━━━━━━━

  ! Don't use '{}' as a type.
  
     6 │ import { BlogFooter } from "@site/src/refine-theme/blog-footer";
     7 │ 
   > 8 │ const IntegrationsLayout = ({ children }: React.PropsWithChildren<{}>) => {
       │                                                                   ^^
     9 │   return (
    10 │     <CommonLayout>
  
  i Prefer explicitly define the object shape. '{}' means "any non-nullable value".
  

./packages/ui-tests/src/test/index.tsx:74:49 lint/complexity/noBannedTypes ━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Don't use '{}' as a type.
  
    73 │   // eslint-disable-next-line react/display-name
  > 74 │   return ({ children }: React.PropsWithChildren<{}>): React.ReactElement => {
       │                                                 ^^
    75 │     return (
    76 │       <BrowserRouter>
  
  i Prefer explicitly define the object shape. '{}' means "any non-nullable value".
  

The number of diagnostics exceeds the number allowed by Biome.
Diagnostics not shown: 173.
Checked 6952 file(s) in 477ms
