
> refinejs-repo@0.0.0 biome
> biome lint .

./packages/chakra-ui/src/theme/index.ts:96:7 lint/performance/noAccumulatingSpread ━━━━━━━━━━━━━━━━━

  ! Avoid the use of spread (`...`) syntax on accumulators.
  
    94 │     const themeName = key as keyof typeof refineCustomThemes;
    95 │     return {
  > 96 │       ...acc,
       │       ^^^^^^
    97 │       [key]: extendTheme({
    98 │         config: {
  
  i Spread syntax should be avoided on accumulators (like those in `.reduce`) because it causes a time complexity of `O(n^2)`.
  
  i Consider methods such as .splice or .push instead.
  

./packages/mantine/src/theme/index.ts:189:5 lint/performance/noAccumulatingSpread ━━━━━━━━━━━━━━━━━━

  ! Avoid the use of spread (`...`) syntax on accumulators.
  
    187 │   const themeName = key as keyof typeof refineColors;
    188 │   return {
  > 189 │     ...acc,
        │     ^^^^^^
    190 │     [themeName]: {
    191 │       globalStyles: (theme: MantineTheme) => ({
  
  i Spread syntax should be avoided on accumulators (like those in `.reduce`) because it causes a time complexity of `O(n^2)`.
  
  i Consider methods such as .splice or .push instead.
  

./documentation/src/utils/remove-active-from-files.ts:7:14 lint/performance/noAccumulatingSpread ━━━━━━━━━━

  ! Avoid the use of spread (`...`) syntax on accumulators.
  
    5 │     const newFile = { ...(files[file] as SandpackFile) };
    6 │     delete newFile.active;
  > 7 │     return { ...acc, [file]: newFile };
      │              ^^^^^^
    8 │   }, {} as SandpackFiles);
    9 │ 
  
  i Spread syntax should be avoided on accumulators (like those in `.reduce`) because it causes a time complexity of `O(n^2)`.
  
  i Consider methods such as .splice or .push instead.
  

./documentation/src/utils/remove-active-from-files.ts:23:14 lint/performance/noAccumulatingSpread ━━━━━━━━━━

  ! Avoid the use of spread (`...`) syntax on accumulators.
  
    21 │       newFile.active = true;
    22 │     }
  > 23 │     return { ...acc, [file]: newFile };
       │              ^^^^^^
    24 │   }, {} as SandpackFiles);
    25 │ 
  
  i Spread syntax should be avoided on accumulators (like those in `.reduce`) because it causes a time complexity of `O(n^2)`.
  
  i Consider methods such as .splice or .push instead.
  

./packages/inferencer/src/components/live/index.tsx:41:17 lint/performance/noAccumulatingSpread ━━━━━━━━━━

  ! Avoid the use of spread (`...`) syntax on accumulators.
  
    39 │               }
    40 │               return {
  > 41 │                 ...acc,
       │                 ^^^^^^
    42 │                 [packageName]: variableName,
    43 │               };
  
  i Spread syntax should be avoided on accumulators (like those in `.reduce`) because it causes a time complexity of `O(n^2)`.
  
  i Consider methods such as .splice or .push instead.
  

./packages/inferencer/src/components/live/index.tsx:58:13 lint/performance/noAccumulatingSpread ━━━━━━━━━━

  ! Avoid the use of spread (`...`) syntax on accumulators.
  
    56 │         (acc, [_packageName, variableName, packageContent]) => {
    57 │           return {
  > 58 │             ...acc,
       │             ^^^^^^
    59 │             [variableName]: packageContent,
    60 │           };
  
  i Spread syntax should be avoided on accumulators (like those in `.reduce`) because it causes a time complexity of `O(n^2)`.
  
  i Consider methods such as .splice or .push instead.
  

./packages/antd/src/definitions/table/index.ts:91:14 lint/performance/noAccumulatingSpread ━━━━━━━━━━

  ! Avoid the use of spread (`...`) syntax on accumulators.
  
    89 │     const field =
    90 │       (item as ConditionalFilter).key || (item as LogicalFilter).field;
  > 91 │     return { ...acc, [field]: item };
       │              ^^^^^^
    92 │   }, {});
    93 │ 
  
  i Spread syntax should be avoided on accumulators (like those in `.reduce`) because it causes a time complexity of `O(n^2)`.
  
  i Consider methods such as .splice or .push instead.
  

./packages/mui/src/theme/index.ts:80:5 lint/performance/noAccumulatingSpread ━━━━━━━━━━━━━━━━━━━━━━━

  ! Avoid the use of spread (`...`) syntax on accumulators.
  
    79 │   return {
  > 80 │     ...acc,
       │     ^^^^^^
    81 │     [key]: createTheme({
    82 │       palette: {
  
  i Spread syntax should be avoided on accumulators (like those in `.reduce`) because it causes a time complexity of `O(n^2)`.
  
  i Consider methods such as .splice or .push instead.
  

Checked 6952 file(s) in 465ms
