
> refinejs-repo@0.0.0 biome
> biome lint .

./packages/inferencer/src/use-relation-fetch/index.ts:129:54 lint/correctness/noUnsafeOptionalChaining ━━━━━━━━━━

  ! Unsafe usage of optional chaining.
  
    128 │                   if (isMultiple && dp.getMany) {
  > 129 │                     const { data } = await dp.getMany?.({
        │                                                      ^^
    130 │                       resource: toPlural(removeRelationSuffix(field.key)),
    131 │                       ids: [requestId],
  
  i If it short-circuits with 'undefined' the evaluation will throw TypeError here:
  
    128 │                   if (isMultiple && dp.getMany) {
  > 129 │                     const { data } = await dp.getMany?.({
        │                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 130 │                       resource: toPlural(removeRelationSuffix(field.key)),
         ...
  > 136 │                       ),
  > 137 │                     });
        │                     ^^
    138 │                     record = data?.[0];
    139 │                   } else {
  

./examples/store/src/components/product/ProductCard/ProductCard.tsx:31:66 lint/correctness/noUnsafeOptionalChaining ━━━━━━━━━━

  ! Unsafe usage of optional chaining.
  
    29 │   variant = "default",
    30 │ }) => {
  > 31 │   const { amount, currency_code } = product?.variants?.[0].prices?.[0];
       │                                                                  ^^
    32 │ 
    33 │   const rootClassName = cn(
  
  i If it short-circuits with 'undefined' the evaluation will throw TypeError here:
  
    29 │   variant = "default",
    30 │ }) => {
  > 31 │   const { amount, currency_code } = product?.variants?.[0].prices?.[0];
       │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    32 │ 
    33 │   const rootClassName = cn(
  

./examples/app-crm/src/components/layout/account-settings/index.tsx:104:73 lint/correctness/noUnsafeOptionalChaining ━━━━━━━━━━

  ! Unsafe usage of optional chaining.
  
    102 │   }
    103 │ 
  > 104 │   const { id, name, email, jobTitle, phone, timezone, avatarUrl } = data?.data;
        │                                                                         ^^
    105 │ 
    106 │   const getActiveForm = (key: FormKeys) => {
  
  i If it short-circuits with 'undefined' the evaluation will throw TypeError here:
  
    102 │   }
    103 │ 
  > 104 │   const { id, name, email, jobTitle, phone, timezone, avatarUrl } = data?.data;
        │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    105 │ 
    106 │   const getActiveForm = (key: FormKeys) => {
  

Checked 6952 file(s) in 482ms
