
> refinejs-repo@0.0.0 biome
> biome lint .

./packages/core/src/hooks/auth/useRegister/index.spec.ts:490:25 lint/correctness/noUnreachable ━━━━━━━━━━

  ! This code will never be reached ...
  
    488 │                     register: () => {
    489 │                         throw new Error("Unhandled error");
  > 490 │                         return Promise.resolve({ success: true });
        │                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    491 │                     },
    492 │                 },
  
  i ... because this statement will throw an exception beforehand
  
    487 │                     ...mockAuthProvider,
    488 │                     register: () => {
  > 489 │                         throw new Error("Unhandled error");
        │                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    490 │                         return Promise.resolve({ success: true });
    491 │                     },
  

./packages/core/src/hooks/auth/useLogin/index.spec.ts:622:25 lint/correctness/noUnreachable ━━━━━━━━━━

  ! This code will never be reached ...
  
    620 │                     login: () => {
    621 │                         throw new Error("Unhandled error");
  > 622 │                         return Promise.resolve({ success: true });
        │                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    623 │                     },
    624 │                     check: () => Promise.resolve({ authenticated: false }),
  
  i ... because this statement will throw an exception beforehand
  
    619 │                 authProvider: {
    620 │                     login: () => {
  > 621 │                         throw new Error("Unhandled error");
        │                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    622 │                         return Promise.resolve({ success: true });
    623 │                     },
  

./packages/core/src/hooks/auth/useLogout/index.spec.ts:605:25 lint/correctness/noUnreachable ━━━━━━━━━━

  ! This code will never be reached ...
  
    603 │                     logout: () => {
    604 │                         throw new Error("Unhandled error");
  > 605 │                         return Promise.resolve({ success: true });
        │                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    606 │                     },
    607 │                 },
  
  i ... because this statement will throw an exception beforehand
  
    602 │                     ...mockAuthProvider,
    603 │                     logout: () => {
  > 604 │                         throw new Error("Unhandled error");
        │                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    605 │                         return Promise.resolve({ success: true });
    606 │                     },
  

./packages/core/src/hooks/auth/useUpdatePassword/index.spec.ts:177:29 lint/correctness/noUnreachable ━━━━━━━━━━

  ! This code will never be reached ...
  
    175 │                         updatePassword: () => {
    176 │                             throw new Error("Unhandled error");
  > 177 │                             return Promise.resolve();
        │                             ^^^^^^^^^^^^^^^^^^^^^^^^^
    178 │                         },
    179 │                     },
  
  i ... because this statement will throw an exception beforehand
  
    174 │                         ...mockLegacyAuthProvider,
    175 │                         updatePassword: () => {
  > 176 │                             throw new Error("Unhandled error");
        │                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    177 │                             return Promise.resolve();
    178 │                         },
  

./packages/core/src/hooks/auth/useUpdatePassword/index.spec.ts:504:25 lint/correctness/noUnreachable ━━━━━━━━━━

  ! This code will never be reached ...
  
    502 │                     updatePassword: () => {
    503 │                         throw new Error("Unhandled error");
  > 504 │                         return Promise.resolve({ success: true });
        │                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    505 │                     },
    506 │                 },
  
  i ... because this statement will throw an exception beforehand
  
    501 │                     ...mockAuthProvider,
    502 │                     updatePassword: () => {
  > 503 │                         throw new Error("Unhandled error");
        │                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    504 │                         return Promise.resolve({ success: true });
    505 │                     },
  

Checked 6953 file(s) in 522ms
